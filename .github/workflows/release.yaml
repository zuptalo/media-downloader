name: Create Release

on:
  workflow_run:
    workflows: [ "Auto Version" ]
    types: [ completed ]
    branches: [ "main" ]

permissions:
  contents: write
  discussions: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: |
          git fetch --tags --force
          latest_tag=$(git describe --tags --abbrev=0)
          version=${latest_tag#v}
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "Latest tag: $latest_tag"
          echo "Version: $version"

      - name: Generate Release Notes
        id: generate_notes
        run: |
          # Get the previous tag
          prev_tag=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Generate changelog content
          if [ -z "$prev_tag" ]; then
            changes=$(git log --pretty=format:"- %s")
          else
            changes=$(git log --pretty=format:"- %s" ${prev_tag}..HEAD)
          fi
          
          {
            echo "## Changes"
            echo "$changes"
            echo
            echo "## Docker Images"
            echo "The following Docker images have been published:"
            echo
            echo "- \`ghcr.io/${{ github.repository }}:v${{ steps.get_version.outputs.version }}\`"
            echo "- \`ghcr.io/${{ github.repository }}:latest\`"
            echo "- \`zuptalo/media-downloader:v${{ steps.get_version.outputs.version }}\`"
            echo "- \`zuptalo/media-downloader:latest\`"
          } > release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.version }}
          body_path: release_notes.md
          tag_name: v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: false